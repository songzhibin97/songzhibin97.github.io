<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>双指针 on songzhibin97的随想</title><link>https://songzhibin97.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/</link><description>Recent content in 双指针 on songzhibin97的随想</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 01 Apr 2024 09:00:00 +0800</lastBuildDate><atom:link href="https://songzhibin97.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/index.xml" rel="self" type="application/rss+xml"/><item><title>283.移动零</title><link>https://songzhibin97.github.io/leetcode/283/</link><pubDate>Mon, 01 Apr 2024 09:00:00 +0800</pubDate><guid>https://songzhibin97.github.io/leetcode/283/</guid><description>题目 283.移动零 思路 这是一道非常典型使用双指针的题目,我们可以设置一个位置作为非零元素的位置,然后遍历数组,如果当前元素不为0,交换标记位置的元素和当前元素,然后标记位置+1即可. 1 2 3 4 5 6 7 8 9 func moveZeroes(nums []int) { nozero := 0 for start := 0; start &amp;lt; len(nums); start++ { if nums[start] != 0 { nums[start], nums[nozero] = nums[nozero], nums[start] nozero++ } } }</description></item></channel></rss>