<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Leetcodes on songzhibin97的随想</title><link>https://songzhibin97.github.io/leetcode/</link><description>Recent content in Leetcodes on songzhibin97的随想</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 01 Apr 2024 09:00:00 +0800</lastBuildDate><atom:link href="https://songzhibin97.github.io/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>1. 两数之和</title><link>https://songzhibin97.github.io/leetcode/1/</link><pubDate>Mon, 01 Apr 2024 09:00:00 +0800</pubDate><guid>https://songzhibin97.github.io/leetcode/1/</guid><description>题目 有人相爱，有人夜里开车看海，有人LeetCode第一题都做不出来 1. 两数之和 思路 暴力解法 遍历数组,找到两个数的和等于目标值 1 2 3 4 5 6 7 8 9 10 func twoSum(nums []int, target int) []int { for i := 0; i &amp;lt; len(nums); i++ { for j := i+1; j &amp;lt; len(nums); j++ { if nums[i] + nums[j] == target { return []int{i,j} } } } return nil } 哈希表 使用哈希表存储遍历过的元素,如果找到目标值-当前值</description></item><item><title>2810. 故障键盘</title><link>https://songzhibin97.github.io/leetcode/2810/</link><pubDate>Mon, 01 Apr 2024 09:00:00 +0800</pubDate><guid>https://songzhibin97.github.io/leetcode/2810/</guid><description>题目 2810. 故障键盘 思路 根据题意,可以知道,只有在输入i的时候会反转之前的内容,那我们可以使用模拟的方式来进行解题. 暴力 首先构造一个反转的方法 1 2 3 4 5 6 7 8 func reverse(val []byte) { i, j := 0, len(val)-1 for i &amp;lt; j { val[i],val[j] = val[j], val[i] i++ j-- } } 根据输入的字符串,进行遍历,遇到字母i的时候,就反转之前的内容,否则追加到数组中 1 2</description></item></channel></rss>